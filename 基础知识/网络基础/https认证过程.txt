1.证书的申请
向CA提交服务器公钥，组织信息，个人信息(域名)等信息申请认证【申请者提交申请】
CA验证申请者提交信息的真实性（组织是否存在、合法、是否拥有域名所有权等）【CA验证申请者的真实性】
验证通过后CA向申请者签发证书（认证的文件）【CA签发证书】
证书包含的明文：申请者公钥，组织信息，个人信息（域名），CA自身的信息，证书有效期，证书序列号等
证书同时包含一个签名：使用散列函数(哈希、SHA等)计算公开的明文信息的摘要，然后使用CA本身的私钥对计算后的信息摘要进行加密，加密后的密文就是签名


发起请求流程
客户端向服务器发出请求
1，服务端返回证书文件（CA签发的）
2，客户端读取证书中的明文信息，采用相同的散列函数计算得到信息摘要【我怎么知道是什么函数？】
3，获取到CA信息，使用CA公钥对签名解密，和散列后的明文信息对比，一致则可以认为证书合法。
4，（顺序不知道是不是3,4）验证证书的其他信息（域名信息%怎么验证的？%，有效时间等）
    客户端内置的证书中如果不包含找到的CA信息，则证书不可信

5，客户端使用伪随机数生成对称秘钥，并通过接收到的证书中包含的服务端的公钥进行加密，后续使用该对称秘钥进行传输信息%后续指多久？%
6，服务端使用自己的私钥解密这个信息，得到对称秘钥【服务器得到对称秘钥】
7，服务器使用对称秘钥加密内容，发送给客户端【对内容（body）加密后发送给客户端】
8，客户端接收到信息后使用对称秘钥解密响应的密文，得到明文内容
9，客户端再次发起https请求，使用对称密钥加密请求的“明文内容 B”，然后服务器使用对称密钥解密密文，得到“明文内容 B”。
以此保持加密通信。
10，%什么时候对称密钥失效？也就是什么时候本次通信结束？%